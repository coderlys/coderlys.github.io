(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{566:function(t,s,a){"use strict";a.r(s);var e=a(13),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-控制工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-控制工具"}},[t._v("#")]),t._v(" git 控制工具")]),t._v(" "),a("h2",{attrs:{id:"一-认识版本控制-版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-认识版本控制-版本控制"}},[t._v("#")]),t._v(" 一 : "),a("strong",[t._v("认识版本控制（版本控制）")])]),t._v(" "),a("p",[a("strong",[t._v("什么是版本控制？")])]),t._v(" "),a("ul",[a("li",[t._v("是维护工程蓝图的标准作法，能"),a("font",{attrs:{color:"orange"}},[t._v("追踪工程蓝图从诞生一直到定案的过程")]),t._v("；")],1),t._v(" "),a("li",[t._v("版本控制也是"),a("font",{attrs:{color:"orange"}},[t._v("一种软件工程技巧")]),t._v("，借此能在软件开发的过程中，"),a("font",{attrs:{color:"orange"}},[t._v("确保由不同人所编辑的同一程序文件都得到同步")]),t._v("；")],1)]),t._v(" "),a("p",[a("strong",[t._v("简单来说，版本控制在软件开发中，可以帮助程序员进行代码的"),a("font",{attrs:{color:"orange"}},[t._v("追踪、维护、控制")]),t._v("等等一系列的操作")],1)]),t._v(" "),a("h3",{attrs:{id:"_1-1-版本控制的功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-版本控制的功能"}},[t._v("#")]),t._v(" 1.1 "),a("strong",[t._v("版本控制的功能")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("不同版本的存储管理：")]),t._v(" "),a("ul",[a("li",[t._v("一个项目会不断进行版本的迭代，来修复之前的一些问题、增加新的功能、需求，甚至包括项目的重构；")])])]),t._v(" "),a("li",[a("strong",[t._v("重大版本的备份维护：")]),t._v(" "),a("ul",[a("li",[t._v("对于很多重大的版本，我们会进行备份管理；")])])]),t._v(" "),a("li",[a("strong",[t._v("恢复之前的项目版本：")]),t._v(" "),a("ul",[a("li",[t._v("当我们开发过程中发生一些严重的问题时，想要恢复之前的操作或者回到之前某个版本")])])]),t._v(" "),a("li",[a("strong",[t._v("记录项目的点点滴滴：")]),t._v(" "),a("ul",[a("li",[t._v("如果我们每一个功能的修改、bug 的修复、新的需求更改都需要记录下来，版本控制可以很好的解决")])])]),t._v(" "),a("li",[a("strong",[t._v("多人开发的代码合并：")]),t._v(" "),a("ul",[a("li",[t._v("项目中通常都是多人开发，将多人代码进行合并，并且在出现冲突时更好的进行处理；")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-版本控制的历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-版本控制的历史"}},[t._v("#")]),t._v(" 1.2 版本控制的历史")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("版本控制的史前时代（没有版本控制）：")]),t._v(" "),a("ul",[a("li",[t._v("人们通常通过文件备份的方式来进行管理，再通过 diff 命令来对比两个文件的差异；")])])]),t._v(" "),a("li",[a("strong",[t._v("CVS（Concurrent Versions System）")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"orange"}},[t._v("第一个被大规模使用的版本控制工具")]),t._v("，诞生于 1985 年；")],1),t._v(" "),a("li",[t._v("由荷兰阿姆斯特丹 VU 大学的 Dick Grune 教授实现的，也算是 SVN 的前身（SVN 的出现就是为了取代 CVS 的）。")])])]),t._v(" "),a("li",[a("strong",[t._v("SVN（Subversion）")]),t._v(" "),a("ul",[a("li",[t._v("因其命令行工具名为"),a("strong",[t._v("svn")]),t._v("因此通常被简称为 SVN；")]),t._v(" "),a("li",[t._v("SVN 由 CollabNet 公司于 2000 年资助并发起开发，目的是取代 CVS，对 CVS 进行了很多的优化；")]),t._v(" "),a("li",[t._v("SVN 和 CVS 一样，也属于"),a("font",{attrs:{color:"orange"}},[t._v("集中式版本控制工具")])],1),t._v(" "),a("li",[t._v("SVN 在"),a("font",{attrs:{color:"orange"}},[t._v("早期公司开发中使用率非常高，但是目前已经被 Git 取代")])],1)])]),t._v(" "),a("li",[a("strong",[t._v("Git")]),t._v("（Linus 的作品）\n"),a("ul",[a("li",[t._v("早期的时候，Linux 社区使用的是"),a("font",{attrs:{color:"orange"}},[t._v("BitKeeper 来进行版本控制；")])],1),t._v(" "),a("li",[t._v("但是因为一些原因，"),a("font",{attrs:{color:"orange"}},[t._v("BitKeeper 想要收回对 Linux 社区的免费授权")]),t._v("；")],1),t._v(" "),a("li",[t._v("于是 Linus 用了"),a("font",{attrs:{color:"orange"}},[t._v("大概一周")]),t._v("的时间，开发了"),a("font",{attrs:{color:"orange"}},[t._v("Git 用来取代 BitKeeper")]),t._v("；")],1),t._v(" "),a("li",[t._v("Linus 完成了 Git 的核心设计，在之后 Linus 功成身退，将 Git 交由"),a("font",{attrs:{color:"orange"}},[t._v("另外一个 Git 的主要贡献者 Junio C Hamano 来维护")]),t._v("；")],1)])])]),t._v(" "),a("h3",{attrs:{id:"_1-3-集中式版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-集中式版本控制"}},[t._v("#")]),t._v(" 1.3 集中式版本控制")]),t._v(" "),a("p",[a("strong",[t._v("CVS")]),t._v("和"),a("strong",[t._v("SVN")]),t._v("都是是属于集中式版本控制系统")]),t._v(" "),a("ul",[a("li",[t._v("它们的主要特点是单一的"),a("font",{attrs:{color:"orange"}},[t._v("集中管理的服务器，保存所有文件的修订版本")]),t._v("；")],1),t._v(" "),a("li",[t._v("协同开发人员通过客户端"),a("font",{attrs:{color:"orange"}},[t._v("连接到这台服务器，取出最新的文件或者提交更新")]),t._v("；")],1)]),t._v(" "),a("p",[a("strong",[t._v("这种做法带来了许多好处，特别是相较于老式的本地管理来说，每个人都可以在一定程度上看到项目中的其他人正在做些什么。")])]),t._v(" "),a("p",[a("strong",[t._v("但是集中式版本控制也有一个核心的问题："),a("font",{attrs:{color:"orange"}},[t._v("中央服务器不能出现故障")])],1)]),t._v(" "),a("ul",[a("li",[t._v("如果宕机一小时，那么在这一小时内，谁都无法提交更新，也就无法协同工作；")]),t._v(" "),a("li",[t._v("如果中心数据库所在的磁盘发生损坏，又没有做恰当备份，毫无疑问你将丢失所有数据")])]),t._v(" "),a("h3",{attrs:{id:"_1-4-分布式版本控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-分布式版本控制"}},[t._v("#")]),t._v(" 1.4 分布式版本控制")]),t._v(" "),a("p",[a("strong",[a("font",{attrs:{color:"orange"}},[t._v("Git 是属于分布式版本控制系统")]),t._v("（Distributed Version Control System，简称")],1),t._v(" "),a("strong",[t._v("DVCS")]),t._v("）")]),t._v(" "),a("ul",[a("li",[t._v("客户端并不只提取最新版本的文件快照， 而是"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("把代码仓库完整地镜像下来，包括完整的历史记录")])],1),t._v(" "),a("li",[t._v("这么一来，任何一处协同工作用的"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("服务器发生故障")]),t._v("，事后都"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("可以用任何一个镜像出来的本地仓库恢复")]),t._v("；")],1),t._v(" "),a("li",[t._v("因为"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("每一次的克隆操作，实际上都是一次对代码仓库的完整备份")]),t._v("；")],1)]),t._v(" "),a("h2",{attrs:{id:"二-git-初始化本地仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-git-初始化本地仓库"}},[t._v("#")]),t._v(" 二：git 初始化本地仓库")]),t._v(" "),a("h3",{attrs:{id:"_2-1-git-的配置选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-git-的配置选项"}},[t._v("#")]),t._v(" 2.1 git 的配置选项")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("安装 Git 后，要做的第一件事就是设置你的用户名和邮件地址。")]),t._v(" "),a("ul",[a("li",[t._v("这一点很重要，因为每一个 "),a("font",{attrs:{color:"orange"}},[t._v("Git 提交都会使用这些信息")]),t._v("，它们"),a("font",{attrs:{color:"orange"}},[t._v("会写入到你的每一次提交中，不可更改")]),t._v("；")],1),t._v(" "),a("li",[t._v("如果使用了"),a("font",{attrs:{color:"orange"}},[t._v(" --global 选项")]),t._v("，那么"),a("font",{attrs:{color:"orange"}},[t._v("该命令只需要运行一次")]),t._v("，因为之后无论你"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("在该系统上做任何事情， Git 都会使用那些信息")]),t._v("；")],1)])])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config --global user.name 'luyoushun'\ngit config --global user.email '2312458618@qq.com'\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[a("strong",[t._v("检测当前的配置信息：git config --list")])])]),t._v(" "),a("h3",{attrs:{id:"_2-2-获取-git-仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-获取-git-仓库"}},[t._v("#")]),t._v(" 2.2 获取 Git 仓库")]),t._v(" "),a("p",[a("strong",[t._v("通常有两种获取 Git 项目仓库的方式：")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("方式一：初始化一个 Git 仓库")])],1)]),t._v(" "),a("ul",[a("li",[a("p",[t._v("该命令将创建一个名为 .git 的子目录，这个子目录含有你初始化的 Git 仓库中所有的必须文件，这些文件是 Git 仓库的核心")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" git init\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])]),t._v(" "),a("li",[a("p",[a("font",{attrs:{color:"cornflowerblue"}},[a("strong",[t._v("方式二：从 Git 远程仓库")])])],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("从其它服务器 克隆（clone） 一个已存在的 Git 仓库")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git clone https://github.com/coderwhy/hy-react-web-music.git\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-3-检测文件的状态-git-status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-检测文件的状态-git-status"}},[t._v("#")]),t._v(" 2.3 检测文件的状态 git status")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("我们在有 Git 仓库的目录下修改一个文件，查看文件的状态：")])]),t._v(" "),a("ul",[a("li",[a("p",[a("font",{attrs:{color:"orange"}},[t._v("git status")])],1),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Git/01.gitStatus%E7%9A%84%E7%8A%B6%E6%80%81.jpg",alt:"01.gitStatus的状态"}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Untracked files：未跟踪的文件")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("未跟踪的文件意味着 Git 在之前的提交中没有这些文件")]),t._v("；")]),t._v(" "),a("li",[t._v("Git 不会自动将之纳入跟踪范围，除非你明明白白地告诉它“我需要跟踪该文件”；")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("我们也可以查看更加简洁的状态信息")])]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git status -s\ngit status --short\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-4-文件添加到暂存区-git-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-文件添加到暂存区-git-add"}},[t._v("#")]),t._v(" "),a("strong",[t._v("2.4 文件添加到暂存区 – git add")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("跟踪新文件命令：")])])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git add aaa.js\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("strong",[t._v("通过 git add . 将所有的文件添加到暂存区中：")])])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git add .\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-5-git-忽略文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-git-忽略文件"}},[t._v("#")]),t._v(" "),a("strong",[t._v("2.5 git 忽略文件")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("一般我们总会有些文件无需纳入")]),t._v(" "),a("strong",[t._v("Git")]),t._v(" "),a("strong",[t._v("的管理，也不希望它们总出现在未跟踪文件列表。")]),t._v(" "),a("ul",[a("li",[t._v("通常都是些"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("自动生成的文件")]),t._v("，比如日志文件，或者编译过程中创建的临时文件等；")],1),t._v(" "),a("li",[t._v("可以创建一个名为"),a("font",{attrs:{color:"orange"}},[a("font",{attrs:{color:""}},[t._v(".gitignore 的文件")])],1),t._v("，列出要忽略的文件的模式")],1)])]),t._v(" "),a("li",[a("strong",[t._v("在实际开发中，这个文件通常不需要手动创建，在必须的时候添加自己的忽略内容即可")])])]),t._v(" "),a("h2",{attrs:{id:"三-git-记录更新变化过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-git-记录更新变化过程"}},[t._v("#")]),t._v(" 三："),a("strong",[t._v("Git 记录更新变化过程")])]),t._v(" "),a("h3",{attrs:{id:"_3-1-文件更新提交-git-commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-文件更新提交-git-commit"}},[t._v("#")]),t._v(" 3.1 文件更新提交 - git commit")]),t._v(" "),a("ul",[a("li",[a("p",[a("font",{attrs:{color:"orange"}},[t._v("在 commit 命令后添加 -m 选项，将提交信息与命令放在同一行")]),t._v(";")],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git commit -m '提交信息'\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("如果"),a("strong",[t._v("我们修改文件的 add 操作，加上 commit 的操作有点繁琐，那么可以将两个命令结合来使用：")])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git commit -a -m '提交的信息'\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-2-查看提交的历史-git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-查看提交的历史-git-log"}},[t._v("#")]),t._v(" 3.2 查看提交的历史 - git log")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("在提交了若干更新，又或者克隆了某个项目之后，有时候我们想要查看一下所有的历史提交记录。")])]),t._v(" "),a("li",[a("strong",[t._v("这个时候我们可以使用 git log 命令")]),t._v(" "),a("ul",[a("li",[t._v("不传入任何参数的默认情况下，git log 会按时间先后顺序列出所有的提交，最近的更新排在最上面")]),t._v(" "),a("li",[t._v("这个命令会列出每个提交的 SHA-1 校验和、作者的名字和电子邮件地址、提交时间以及提交说明")])])])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git log\n// 显示很多提交的信息\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git log --pretty=oneline\n// 简化整洁 提交的信息\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git log --pretty=oneline --graph\n// 显示分支的 提交的信息\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_3-3-版本回退-git-reset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-版本回退-git-reset"}},[t._v("#")]),t._v(" 3.3 版本回退 -git reset")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("如果想要进行版本回退，我们需要先知道目前处于哪一个版本：Git 通过 HEAD 指针记录当前版本。")]),t._v(" "),a("ul",[a("li",[t._v("HEAD 是当前分支引用的指针，它总是该分支上的最后一次提交")])])])]),t._v(" "),a("p",[t._v("回退之前的版本，"),a("font",{attrs:{color:"orange"}},[t._v("先用 git log 查看之前版本的 commit 提交的 id ")]),t._v(" , 例如下")],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git log --pretty=oneline\n86a9e40659faf31da4b26c940451556a634aa1bf (HEAD -> master) 提交222\nf59cdac204d5ddf8b26b033794859978eab562fc 提交111\nd0e282079a03de92ea02db219db8184006c9faf8 初始化项目\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("然后"),a("strong",[t._v("我们可以通过 HEAD 来改变 Git 目前的版本指向")])]),t._v(" "),a("ul",[a("li",[a("p",[a("font",{attrs:{color:"orange"}},[t._v("上一个版本就是 HEAD^ ，上上一个版本就是 HEAD^^")])],1),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reset --hard HEAD^\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])]),t._v(" "),a("li",[a("p",[a("font",{attrs:{color:"orange"}},[t._v("如果是上 1000 个版本，我们可以使用 HEAD~1000")])],1),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reset --hard HEAD~1000\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])]),t._v(" "),a("li",[a("p",[a("font",{attrs:{color:"orange"}},[t._v("我们可以可以指定某一个 commit id")])],1),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reset --hard f59cda\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])])]),t._v(" "),a("p",[a("strong",[t._v("如果再想回到之前的版本，使用 git log 是没有用的")]),t._v(" 需要使用"),a("font",{attrs:{color:"orange"}},[t._v("git reflog")])],1),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git reflog // 可以查到所有的历史操作\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"四-git-远程仓库和验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-git-远程仓库和验证"}},[t._v("#")]),t._v(" 四："),a("strong",[t._v("Git 远程仓库和验证")])]),t._v(" "),a("h3",{attrs:{id:"_4-1-远程仓库是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-远程仓库是什么"}},[t._v("#")]),t._v(" 4.1 远程仓库是什么？")]),t._v(" "),a("ul",[a("li",[t._v("什么是远程仓库（Remote Repository）呢？\n"),a("ul",[a("li",[t._v("目前我们的代码是保存在一个本地仓库中，也就意味着我们只是在进行本地操作；")]),t._v(" "),a("li",[t._v("在真实开发中，我们通常是多人开发的，所以我们会将管理的代码共享到远程仓库中")])])]),t._v(" "),a("li",[t._v("目前我们有如下方式可以使用 Git 服务器：\n"),a("ul",[a("li",[t._v("使用第三方的 Git 服务器：比如"),a("font",{attrs:{color:"orange"}},[t._v("GitHub、Gitee、Gitlab")]),t._v("等等")],1)])])]),t._v(" "),a("h3",{attrs:{id:"_4-2-远程仓库的验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-远程仓库的验证"}},[t._v("#")]),t._v(" 4.2 远程仓库的验证")]),t._v(" "),a("p",[t._v("如果没有验证，任何人都可以随意操作仓库是一件非常危险的事情；")]),t._v(" "),a("ul",[a("li",[t._v("目前 Git 服务器验证手段主要有两种\n"),a("ul",[a("li",[t._v("方式一：基于"),a("font",{attrs:{color:"orange"}},[t._v("HTTP 的凭证存储")])],1),t._v(" "),a("li",[t._v("方式二：基于"),a("font",{attrs:{color:"orange"}},[t._v("SSH 的密钥")])],1)])])]),t._v(" "),a("h3",{attrs:{id:"_4-3-http-的凭证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-http-的凭证"}},[t._v("#")]),t._v(" 4.3 HTTP 的凭证")]),t._v(" "),a("ul",[a("li",[t._v("因为"),a("strong",[t._v("本身 HTTP 协议是无状态的连接，所以每一个连接都需要用户名和密码")]),t._v(" "),a("ul",[a("li",[t._v("如果每次都这样操作，那么会非常麻烦；")]),t._v(" "),a("li",[t._v("幸运的是，Git 拥有一个凭证系统来处理这个事情")])])]),t._v(" "),a("li",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("在安装 git 的时候，会安装一个叫做 “Git Credential Manager for Windows” 的辅助工具，会保存用户名和密码")])],1)]),t._v(" "),a("h3",{attrs:{id:"_4-4-ssh-密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-ssh-密钥"}},[t._v("#")]),t._v(" 4.4 SSH 密钥")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Secure Shell（安全外壳协议，简称 SSH）是"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("一种加密的网络传输协议")]),t._v("，可在不安全的网络中为网络服务提供安全的传输环境")],1)]),t._v(" "),a("li",[a("p",[a("strong",[t._v("SSH 以非对称加密实现身份验证")])]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("是人工生成一对公钥和私钥，通过生成的密钥进行认证，这样就可以在不输入密码的情况下登录")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("公钥需要放在待访问的电脑之中，而对应的私钥需要由用户自行保管")])],1)])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("如果我们以 SSH 的方式访问 Git 仓库，那么就需要生产对应的公钥和私钥")])]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('ssh-keygen -t ed25519 -C “your email"\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_4-5-管理远程服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-管理远程服务器"}},[t._v("#")]),t._v(" 4.5 管理远程服务器")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("查看远程地址：比如我们之前从远程仓库中都是 clone 下来的代码，它就是有自己的远程仓库的")])])]),t._v(" "),a("p",[a("strong",[t._v("添加远程地址")]),t._v("：我们也可以继续添加远程服务器（"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("让本地仓库和远程服务器仓库建立连接")]),t._v("）")],1),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("font",{attrs:{color:"orange"}},[t._v("git remote add <自定义名称> url")])],1)]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 例如\ngit remote add origin https://gitee.com/luyoushun/cs0823.git\n// 可以添加远程服务器 让本地仓库和远程服务器仓库建立连接\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])]),t._v(" "),a("p",[a("strong",[t._v("移除远程地址")])]),t._v(" "),a("ul",[a("li",[a("p",[a("font",{attrs:{color:"orange"}},[a("strong",[t._v("git remote remove <名称>")])])],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote remove origin\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("p",[a("strong",[t._v("远程仓库的交互")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("从远程仓库 clone 代码：将存储库克隆到新创建的目录中")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git clone http://152.136.185.210:7888/coderwhy/gitremotedemo.git\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])]),t._v(" "),a("li",[a("p",[t._v("将代码 push 到远程仓库：将本地仓库的代码推送到远程仓库中")])]),t._v(" "),a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push\ngit push origin master\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("从远程仓库 fetch 代码：从远程仓库获取最新的代码")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("默认情况下是从 origin 中获取代码")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git fetch\ngit fetch origin master\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])]),t._v(" "),a("li",[a("p",[t._v("获取到代码后默认并没有合并到本地仓库，我们需要通过 merge 来合并；")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git merge\ngit merge origin/master\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("从远程仓库 pull 代码：上面的两次操作有点繁琐，我们可以通过一个命令来操作")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git pull\ngit fetch + git merge(rebase)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_4-6-远程仓库交互的主要操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6-远程仓库交互的主要操作"}},[t._v("#")]),t._v(" 4.6 远程仓库交互的主要操作")]),t._v(" "),a("p",[a("strong",[t._v("添加到远程的仓库（已经有文件）的步骤")])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git init   // 项目初始化\ngit add .  // 添加到暂存处\ngit commit -m '项目初始化' //提交到本地仓库\ngit remote add origin https://gitee.com/luyoushun/cs0823.git  // 本地仓库和远程仓库的连接\ngit remote -v // 可以查看是否连接成功\n\ngit branch --set-upstream-to=origin/master  // 给给当前分支设置一个跟踪分支，本地分支和远程分支关联，关联目的是在本地分支下操作 pull , push 不需要指定在命令行指定远程的分支， 如果这里是写 git pull origin master 分支的话，那么每次 pull 或者 push 都要加上 origin master 仓库具体的分支\n\ngit pull origin master --allow-unrelated-histories  // 将远程仓库的数据拉到本地数据进行合并 --allow-unrelated-histories 【允许不相关历史提交，并强制合并】\ngit push 提交数据到仓库中\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[a("strong",[t._v("公司已有项目，并且有远程仓库了的操作有哪些")])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git clone xxxxxxxxxxxxxxx\n// 进行开发\n\ngit add .\ngit commit -m '提交'\ngit pull\ngit push\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[a("strong",[t._v("开发一个全新的项目 （由你来搭建的）")])]),t._v(" "),a("p",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("方案一：")])],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git clone xxxxxxxxxxxxx\n// 在lone下文件夹中开始搭建整个项目\ngit add .\ngit commit -m '项目初始化'\ngit push\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("方案二：")])],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git remote add origin  xxxxxxxx\ngit branch --set-upstream-to=origin/master\ngit pull --allow-unrelated-histories\ngit push\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"五-git-的标签-tag-用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-git-的标签-tag-用法"}},[t._v("#")]),t._v(" 五："),a("strong",[t._v("Git 的标签 tag 用法")])]),t._v(" "),a("p",[a("strong",[t._v("对于重大的版本我们常常会打上一个标签，以表示它的重要性")])]),t._v(" "),a("ul",[a("li",[t._v("git 可以给仓库历史中的某一个提交打上标签")]),t._v(" "),a("li",[t._v("比较有代表性的是人们会使用这个功能来标记发布结点（ v1.0 、 v2.0 等等）")])]),t._v(" "),a("h3",{attrs:{id:"_5-1-创建标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-创建标签"}},[t._v("#")]),t._v(" 5.1 "),a("font",{attrs:{color:"orange"}},[t._v("创建标签")])],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("轻量标签")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git tag v1.0\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("附注标签")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git tag -a v1.1 -m '附注标签'\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-2-标签推送到远程仓库服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-标签推送到远程仓库服务器"}},[t._v("#")]),t._v(" 5.2 "),a("font",{attrs:{color:"orange"}},[t._v("标签推送到远程仓库服务器")])],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("推送自定的标签")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin v1.0\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("推送所有的标签")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin --tags\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-3-删除标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-删除标签"}},[t._v("#")]),t._v(" 5.3 "),a("font",{attrs:{color:"orange"}},[a("strong",[t._v("删除标签")])])],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("删除本地仓库标签")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git tag -d v1.1\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("删除远程仓库标签")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin -d v1.1\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_5-4-切换到标签的版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-切换到标签的版本"}},[t._v("#")]),t._v(" 5.4 "),a("font",{attrs:{color:"orange"}},[t._v("切换到标签的版本")])],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout v1.0\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"六-git-分支的使用过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-git-分支的使用过程"}},[t._v("#")]),t._v(" 六："),a("strong",[t._v("Git 分支的使用过程")])]),t._v(" "),a("p",[a("strong",[t._v("git 的分支，其实本质上仅仅是指向提交对象的可变指针")])]),t._v(" "),a("ul",[a("li",[t._v("Git 的"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("默认分支名字是 master")]),t._v("，在多次提交操作之后，你其实已经有一个"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("指向最后那个提交对象的 master 分支")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("master 分支会在每次提交时自动移动")])],1)]),t._v(" "),a("h3",{attrs:{id:"_6-1-创建分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-创建分支"}},[t._v("#")]),t._v(" 6.1 创建分支")]),t._v(" "),a("p",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("使用 "),a("strong",[t._v("git branch 分支名")]),t._v("，就可以创建一个可以移动的新的指针")])],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 例如这样\ngit branch testing\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("切换分支 使用 "),a("strong",[t._v("git checkout 分支名")])])],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 例如这样\ngit checkout testing\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("查看所有的分支 "),a("strong",[t._v("git branch")])])],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 例如这样\ngit branch\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_6-2-创建分支同时切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-创建分支同时切换"}},[t._v("#")]),t._v(" 6.2 创建分支同时切换")]),t._v(" "),a("p",[a("font",{attrs:{color:"cornflowerblue"}},[t._v("创建新分支的同时切换过去使用 "),a("strong",[t._v("git checkout -b 分支名")])])],1),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 例如这样\ngit checkout -b dev\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_6-3-为什么需要使用分支呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-为什么需要使用分支呢"}},[t._v("#")]),t._v(" 6.3 为什么需要使用分支呢？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("让我们来看一个简单的分支新建与分支合并的例子，实际工作中你可能会用到类似的工作流。")]),t._v(" "),a("ul",[a("li",[t._v("开发某个项目，在默认分支 master 上进行开发；")]),t._v(" "),a("li",[t._v("实现项目的功能需求，不断提交；")]),t._v(" "),a("li",[t._v("并且在一个大的版本完成时，发布版本，打上一个 tag v1.0.0；")])])]),t._v(" "),a("li",[a("p",[t._v("继续开发后续的新功能，正在此时，你突然接到一个电话说有个很严重的问题需要紧急修补， 你将按照如下方式来处理")]),t._v(" "),a("ul",[a("li",[t._v("切换到 tag v1.0.0 的版本，并且创建一个分支 hotfix；")])])]),t._v(" "),a("li",[a("p",[t._v("分支上开发，修复 bug")]),t._v(" "),a("ul",[a("li",[t._v("我们可以在创建的 hotfix 分支上继续开发工作或者修复 bug；")]),t._v(" "),a("li",[t._v("当完成要做的工作后，重新打上一个新的 tag v1.0.1；")])])]),t._v(" "),a("li",[a("p",[t._v("切换回 master 分支，但是这个时候 master 分支也需要修复刚刚的 bug：")]),t._v(" "),a("ul",[a("li",[t._v("所以我们需要将 master 分支和 hotfix 分支进行合并；")])]),t._v(" "),a("p",[t._v("​ "),a("strong",[t._v("合并分支")]),t._v(" "),a("strong",[a("font",{attrs:{color:"orange"}},[t._v("git merge hotfix")])],1)])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Git/02.%E4%BD%BF%E7%94%A8%E5%88%86%E6%94%AF%E7%9A%84%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg",alt:"02.使用分支的流程图"}})]),t._v(" "),a("h3",{attrs:{id:"_6-4-查看和删除分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-查看和删除分支"}},[t._v("#")]),t._v(" 6.4 查看和删除分支")]),t._v(" "),a("p",[a("strong",[t._v("如果我们希望查看当前所有的分支")])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git branch # 查看当前所有的分支\ngit branch –v # 同时查看最后一次提交\ngit branch --merged # 查看所有合并到当前分支的分支\ngit branch --no-merged # 查看所有没有合并到当前分支的分支\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("strong",[t._v("如果某些已经合并的分支我们不再需要了，那么可以将其移除掉")])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git branch -d hotfix # 删除分支，如果该分支有提交未进行合并，则会删除失败\ngit branch -D hotfix # 强制删除分支， 如果该分支有提交未进行合并，也会删除成功\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_6-5-分支的创建和跟踪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-分支的创建和跟踪"}},[t._v("#")]),t._v(" 6.5 分支的创建和跟踪")]),t._v(" "),a("p",[t._v("如果本地仓库是 master 分支 远程的分支是 main，此时就存在不同的分支，此时可以使用 "),a("strong",[t._v("git checkout --track origin/main")])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout --track origin/main\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"_6-6-设置上游分支-跟踪分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-设置上游分支-跟踪分支"}},[t._v("#")]),t._v(" 6.6 设置上游分支 (跟踪分支)")]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git fetch\ngit branch --set-upstream-to=origin/main\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"七-git-的-工作流-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七-git-的-工作流-flow"}},[t._v("#")]),t._v(" 七："),a("strong",[t._v("Git 的 工作流 （Flow）")])]),t._v(" "),a("ul",[a("li",[t._v("由于 Git 上分支的使用的便捷性，产生了很多 Git 的工作流：\n"),a("ul",[a("li",[t._v("也就是说，在整个项目开发周期的不同阶段，你可以同时拥有多个开放的分支")]),t._v(" "),a("li",[t._v("你可以定期地把某些主题分支合并入其他分支中")])])]),t._v(" "),a("li",[t._v("比如以下的工作流\n"),a("ul",[a("li",[a("font",{attrs:{color:"orange"}},[t._v("master 作为主分支")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"orange"}},[t._v("develop 作为开发分支，并且有稳定版本时，合并到 master 分支中")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"orange"}},[t._v("topic 作为某一个主题或者功能或者特性的分支进行开发，开发完成后合并到 develop 分支中")])],1)])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Git/03.%E5%B7%A5%E4%BD%9C%E7%9A%84%E5%88%86%E6%94%AF%E6%B5%81.jpg",alt:"03.工作的分支流"}})]),t._v(" "),a("h2",{attrs:{id:"八-git-远程分支的管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八-git-远程分支的管理"}},[t._v("#")]),t._v(" 八："),a("strong",[t._v("Git 远程分支的管理")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("远程分支也是一种分支结构")]),t._v(" "),a("ul",[a("li",[t._v("以"),a("remote"),t._v(" / "),a("branch"),t._v(" 的形式命名的")],1)])]),t._v(" "),a("li",[t._v("如果其他人修改了代码，那么远程分支结构\n"),a("ul",[a("li",[t._v("你需要通过"),a("font",{attrs:{color:"orange"}},[t._v("fetch 来获取最新的远程分支提交信息")]),t._v("；")],1)])])]),t._v(" "),a("p",[a("strong",[t._v("推送分支到远程")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当你想要公开分享一个分支时，需要将"),a("font",{attrs:{color:"orange"}},[t._v("其推送到有写入权限的远程仓库")]),t._v("上； git push "),a("remote"),t._v(" "),a("branch")],1)]),t._v(" "),a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin <branch>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("p",[a("strong",[t._v("跟踪远程分支")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当克隆一个仓库时，它通常会自动地创建一个跟踪 origin/master 的 master 分支；")])]),t._v(" "),a("li",[a("p",[t._v("如果你愿意的话可以设"),a("font",{attrs:{color:"orange"}},[t._v("置其他的跟踪分支")]),t._v("，可以通过"),a("font",{attrs:{color:"orange"}},[t._v("运行 git checkout --track "),a("remote"),t._v("/"),a("branch")],1)],1)]),t._v(" "),a("li",[a("p",[t._v("如果你尝试检出的分支 (a) "),a("font",{attrs:{color:"orange"}},[t._v("不存在")]),t._v("且 (b) 刚好只有一个名字与之匹配的远程分支，那么 "),a("font",{attrs:{color:"orange"}},[t._v("Git 就会为你创建一个跟踪分支")])],1),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout --track <remote>/<branch>\ngit checkout <branch>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])])]),t._v(" "),a("p",[a("strong",[t._v("删除远程分支")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果某一个"),a("font",{attrs:{color:"orange"}},[t._v("远程分支不再使用，我们想要删除掉")]),t._v("，可以运行带有 --delete 选项的 git push 命令来删除一个远程分支。")],1)]),t._v(" "),a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git push origin --delete <branch>\ngit push origin -d <branch>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"九-git-rebase-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九-git-rebase-的使用"}},[t._v("#")]),t._v(" 九："),a("strong",[t._v("Git rebase 的使用")])]),t._v(" "),a("p",[t._v("在 Git 中整合来自不同分支的修改主要有两种方法 : "),a("strong",[t._v("merge 和 rebase")])]),t._v(" "),a("p",[a("img",{attrs:{src:"images%5C04.merqe%E5%92%8Crebase%E7%9A%84%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF%E7%9A%84%E4%B8%8D%E5%90%8C%E7%82%B9.jpg",alt:"04.merqe和rebase的合并分支的不同点"}})]),t._v(" "),a("h3",{attrs:{id:"_9-1-什么是-rebase-呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-什么是-rebase-呢"}},[t._v("#")]),t._v(" "),a("strong",[t._v("9.1 什么是 rebase 呢？")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在上面的图例中，你可以提取在 C4 中引入的补丁和修改，然后在 C3 的基础上应用一次；")])]),t._v(" "),a("li",[a("p",[t._v("在 Git 中，这种操作就叫做 变基（rebase）；")])]),t._v(" "),a("li",[a("p",[t._v("你可以使用 rebase 命令将提交到某一分支上的所有修改都移至另一分支上，就好像“重新播放”一样；")])]),t._v(" "),a("li",[a("p",[t._v("rebase 这个单词如何理解呢？")]),t._v(" "),a("ul",[a("li",[t._v("我们可以将其理解成改变当前分支的 base")]),t._v(" "),a("li",[t._v("比如在分支 experiment 上执行 rebase master，那么可以改变 experiment 的 base 为 master")])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout experiment\ngit rebase master\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_9-2-rebase-是如何工作的呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-rebase-是如何工作的呢"}},[t._v("#")]),t._v(" "),a("strong",[t._v("9.2 rebase 是如何工作的呢？")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("它的原理是首先找到这两个分支（即当前分支 experiment、变基操作的目标基底分支 master） 的最近共同祖先 C2；")])]),t._v(" "),a("li",[a("p",[t._v("然后对比当前分支相对于该祖先的历次提交，提取相应的修改并存为临时文件；")])]),t._v(" "),a("li",[a("p",[t._v("然后将当前分支指向目标基底 C3；")])]),t._v(" "),a("li",[a("p",[t._v("最后以此将之前另存为临时文件的修改依序应用；")])]),t._v(" "),a("li",[a("p",[t._v("我们可以再次执行 master 上的合并操作：")]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout master\ngit merge experiment\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])])]),t._v(" "),a("h3",{attrs:{id:"_9-3-rebase-和-merge-的选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-rebase-和-merge-的选择"}},[t._v("#")]),t._v(" 9.3 rebase 和 merge 的选择")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("rebase 和 merge 是对 Git 历史的不同处理方法")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"orange"}},[t._v("merge 用于 记录 git 的所有历史")]),t._v("， 那么"),a("font",{attrs:{color:"orange"}},[t._v("分支的历史错综复杂")]),t._v("，也"),a("font",{attrs:{color:"orange"}},[t._v("全部记录下来")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"orange"}},[t._v("rebase 用于简化历史记录 将两个分支的历史简化")]),t._v("，整个历史更加简洁")],1)])])]),t._v(" "),a("p",[t._v("注意："),a("strong",[t._v("rebase 有一条黄金法则")]),a("font",{attrs:{color:"orange"}},[a("strong",[t._v("永远不要在主分支上使用 rebase")])])],1),t._v(" "),a("ul",[a("li",[t._v("如果在"),a("font",{attrs:{color:"cornflowerblue"}},[t._v("main 上面使用 rebase，会造成大量的提交历史在 main 分支中不同；")])],1),t._v(" "),a("li",[t._v("而多人开发时，其他人依然在原来的 main 中，对于提交历史来说会有很大的变化；")])]),t._v(" "),a("h2",{attrs:{id:"十-git-常见命令速查表-和-常见操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十-git-常见命令速查表-和-常见操作"}},[t._v("#")]),t._v(" 十："),a("strong",[t._v("Git 常见命令速查表 和 常见操作")])]),t._v(" "),a("p",[a("strong",[t._v("创建连接远程仓库")])]),t._v(" "),a("div",{staticClass:"language-xml-dtd line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git init   // 初始化本地仓库\ngit remote add origin xxx  // 添加远程仓库\n\n不同的分支中从远程仓库获取内容\n第一种方法\n    git fetch\n    git branch --set-upstream-to=origin/main\n    git merge --allow-unrelated-histories\n    git config push default upstream\n\n第二种方法\n\tgit checkout main\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[a("img",{attrs:{src:"/images/Git/05.git%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4%E7%9A%84%E9%80%9F%E6%9F%A5%E8%A1%A8.jpg",alt:"05.git常见命令的速查表"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);